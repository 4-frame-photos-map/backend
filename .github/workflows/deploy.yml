# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
        
    - name: Make gradlew executable
      run: chmod 744 ./gradlew
    
    - name: Build with Gradle
      run: ./gradlew bootJar

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: web docker build and push
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/photosmap .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/photosmap
      
    - name: remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.BACKEND_HOST }}
        username: ${{ secrets.BACKEND_USERNAME }}
        password: ${{ secrets.BACKEND_PASSWORD }}
        port: ${{ secrets.BACKEND_PORT }}
        script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/photosmap
            docker stop ${{ secrets.BACKEND_PROJECT_NAME }}
            
            docker run --name=${{ secrets.BACKEND_PROJECT_NAME }} -p 8080:8080 -v /docker_projects/photosmap/volumes/gen:/gen --restart unless-stopped -e TZ=Asia/Seoul -d photosmap
            docker image prune -f
